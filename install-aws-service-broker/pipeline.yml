resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: terraform-state
  type: s3
  source:
    disable_ssl: false
    access_key_id: {{TF_VAR_aws_access_key}}
    secret_access_key: {{TF_VAR_aws_secret_key}}
    endpoint: {{S3_ENDPOINT}}
    bucket: {{S3_OUTPUT_BUCKET}}
    region_name: {{S3_REGION}}
    versioned_file: {{S3_TFSTATE}}

- name: pcf-terraform-state
  type: s3
  source:
    disable_ssl: false
    access_key_id: {{TF_VAR_aws_access_key}}
    secret_access_key: {{TF_VAR_aws_secret_key}}
    bucket: {{S3_OUTPUT_BUCKET}}
    region_name: {{S3_REGION}}
    versioned_file: terraform.tfstate

- name: pivnet-aws-service-broker
  type: pivnet
  check_every: 4h
  source:
    api_token: {{pivnet_token}}
    product_slug: aws-services
    product_version: {{aws_major_minor_version}}
    sort_by: semver

- name: pcf-pipelines
  type: git
  source:
    uri: git@github.com:cah-josephgeorge/pcf-pipelines.git
    branch: fuse
    private_key: {{git_private_key}}

jobs:
- name: bootstrap-terraform-state
  serial_groups: [terraform]
  plan:
  - get: pcf-pipelines
  - task: create-terraform-state
    params:
      S3_BUCKET_TERRAFORM: {{S3_OUTPUT_BUCKET}}
      S3_ENDPOINT: {{S3_ENDPOINT}}
      S3_REGION: {{TF_VAR_aws_region}}
      S3_TFSTATE: {{S3_TFSTATE}}
      AWS_ACCESS_KEY_ID: {{TF_VAR_aws_access_key}}
      AWS_SECRET_ACCESS_KEY: {{TF_VAR_aws_secret_key}}
    file: pcf-pipelines/tasks/create-initial-terraform-state/task.yml

- name: create-infrastructure
  serial_groups: [terraform]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state

  - task: create-infrastructure
    file: pcf-pipelines/install-aws-service-broker/tasks/prepare-aws/task.yml
    params:
      DB_MASTER_USERNAME: {{db_master_username}}
      DB_MASTER_PASSWORD: {{db_master_password}}
      TERRAFORM_PREFIX: {{terraform_prefix}}
      TF_VAR_aws_access_key: {{TF_VAR_aws_access_key}}
      TF_VAR_aws_secret_key: {{TF_VAR_aws_secret_key}}
      TF_VAR_aws_region: {{TF_VAR_aws_region}}
      TF_VAR_az1: {{TF_VAR_az1}}
      TF_VAR_az2: {{TF_VAR_az2}}
      TF_VAR_az3: {{TF_VAR_az3}}
      TF_VAR_vpc_cidr: {{TF_VAR_vpc_cidr}}
      TF_VAR_public_subnet_cidr_az1: {{TF_VAR_public_subnet_cidr_az1}}
      TF_VAR_public_subnet_cidr_az2: {{TF_VAR_public_subnet_cidr_az2}}
      TF_VAR_public_subnet_cidr_az3: {{TF_VAR_public_subnet_cidr_az3}}
      TF_VAR_ert_subnet_cidr_az1: {{TF_VAR_ert_subnet_cidr_az1}}
      TF_VAR_ert_subnet_cidr_az2: {{TF_VAR_ert_subnet_cidr_az2}}
      TF_VAR_ert_subnet_cidr_az3: {{TF_VAR_ert_subnet_cidr_az3}}
      TF_VAR_services_subnet_cidr_az1: {{TF_VAR_services_subnet_cidr_az1}}
      TF_VAR_services_subnet_cidr_az2: {{TF_VAR_services_subnet_cidr_az2}}
      TF_VAR_services_subnet_cidr_az3: {{TF_VAR_services_subnet_cidr_az3}}
      TF_VAR_infra_subnet_cidr_az1: {{TF_VAR_infra_subnet_cidr_az1}}
      TF_VAR_rds_subnet_cidr_az1: {{TF_VAR_rds_subnet_cidr_az1}}
      TF_VAR_rds_subnet_cidr_az2: {{TF_VAR_rds_subnet_cidr_az2}}
      TF_VAR_rds_subnet_cidr_az3: {{TF_VAR_rds_subnet_cidr_az3}}
      TF_VAR_opsman_ip_az1: {{TF_VAR_opsman_ip_az1}}
    ensure:
      put: terraform-state
      params:
        file: terraform-state-output/terraform.tfstate

- name: upload-aws
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: pivnet-product
      resource: pivnet-aws-service-broker
      params:
        globs:
        - "*pivotal"
    - get: terraform-state
      passed: [create-infrastructure]
  - task: upload-tile
    file: pcf-pipelines/tasks/upload-product-and-stemcell/task.yml
    params:
      OPS_MGR_HOST: {{OPSMAN_URI}}
      OPS_MGR_USR: {{OPSMAN_USER}}
      OPS_MGR_PWD: {{OPSMAN_PASSWORD}}
      PIVNET_API_TOKEN: {{pivnet_token}}
      IAAS: "aws"
      NO_PROXY: ""
      OM_IP: ""
  - task: stage-tile
    file: pcf-pipelines/tasks/stage-product/task.yml
    params:
      OPSMAN_URI: {{OPSMAN_URI}}
      OPSMAN_USERNAME: {{OPSMAN_USER}}
      OPSMAN_PASSWORD: {{OPSMAN_PASSWORD}}
      PRODUCT_NAME: aws-services

- name: deploy-aws
  serial_groups: [opsman]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: terraform-state
      passed: [upload-aws]
    - get: pcf-terraform-state

  - task: prepare-rds
    file: pcf-pipelines/install-aws-service-broker/tasks/prepare-rds/task.yml
    params:
      PEM: {{PEM}}
      ERT_DOMAIN: {{ERT_DOMAIN}}
      DB_AWS_SERVICE_BROKER_USERNAME: {{db_aws_service_broker_username}}
      DB_AWS_SERVICE_BROKER_PASSWORD: {{db_aws_service_broker_password}}

  - task: configure-json
    file: pcf-pipelines/install-aws-service-broker/tasks/configure-json/task.yml
    params:
      pcf_iaas: aws
      pcf_ert_domain: {{ERT_DOMAIN}}
      pcf_opsman_admin: {{OPSMAN_USER}}
      pcf_opsman_admin_passwd: {{OPSMAN_PASSWORD}}
      pcf_az_1: {{TF_VAR_az1}}
      pcf_az_2: {{TF_VAR_az2}}
      pcf_az_3: {{TF_VAR_az3}}
      terraform_prefix: {{terraform_prefix}}
      S3_ENDPOINT: {{S3_ENDPOINT}}

  - task: configure-service-broker
    file: pcf-pipelines/install-aws-service-broker/tasks/configure-service-broker/task.yml
    params:
      pcf_iaas: aws
      pcf_ert_domain: {{ERT_DOMAIN}}
      pcf_opsman_admin: {{OPSMAN_USER}}
      pcf_opsman_admin_passwd: {{OPSMAN_PASSWORD}}

  - task: disable-errands
    file: pcf-pipelines/tasks/disable-errands/task.yml
    params:
      PRODUCT_NAME: aws-services
      OPSMAN_URI: {{OPSMAN_URI}}
      OPSMAN_USERNAME: {{OPSMAN_USER}}
      OPSMAN_PASSWORD: {{OPSMAN_PASSWORD}}
      ERRANDS_TO_DISABLE: {{aws_errands_to_disable}}

  - task: deploy-aws
    file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_URI: {{OPSMAN_URI}}
      OPSMAN_USERNAME: {{OPSMAN_USER}}
      OPSMAN_PASSWORD: {{OPSMAN_PASSWORD}}
